Re : Tổng_hợp các câu_hỏi ? Thanh_Pham_Minh wrote : _ Tieu _ Doan _ Du wrote : Đó là tư_duy thông_thường , nếu thế_thì chả cần phải nói khái_niệm biến phải được gán trước break làm_gì , vì theo lẽ thường thì sau break có thực_thi đâu . OK , mình sẽ nói kỹ hơn một xíu . Tạm_thời chúng_ta có 3 lệnh cần quan_tâm : lệnh return , lệnh gán , lệnh sử_dụng ( biến ) . Giờ xem như chưa có lệnh return : trong function chỉ có lệnh gán và lệnh sử_dụng . Chúng_ta sẽ đưa lệnh return vào sau để thấy được sự logic thông_thường . Trường_hợp 1 : không_thể chắc_chắn lệnh gán xảy_ra , lúc này ở lệnh sử_dụng sẽ bị lỗi Not_Defined_Before_Use . Giờ dù ta có đưa return vào chỗ nào đi_nữa cũng không thay_đổi được vấn_đề ( lệnh gán vẫn không_thể chắc_chắn xảy_ra hay không = > ở lệnh sử_dụng vẫn lỗi ) . Trường_hợp 2 : lệnh gán chắc_chắn xảy_ra , lúc này ở lệnh sử_dụng không có lỗi . 2a ) Giờ nếu ta đưa return vào sau cả hai lệnh trên thì vẫn không có lỗi . 2b ) Nếu ta đưa return vào giữa 2 lệnh trên . Chia ra : i ) Nếu return xảy_ra = > lệnh sử_dụng ( nằm sau lệnh return ) không_thể xảy_ra = > không_thể có lỗi ( vẫn giống lúc không có return ) . ii ) ) Nếu return không xảy_ra : trước lệnh sử_dụng vẫn chắc_chắn có lệnh gán ( nếu_không chắc_chắn có lệnh gán thì rơi vào trường_hợp 1 rồi nhé ) = > vẫn không_thể có lỗi . iii ) Return không chắc có xảy_ra không : dù thế_nào cũng là 1 trong 2 cái ( i , ii ) đã nói ở trên . 2c ) Nếu ta đưa lệnh return vào trước 2 lệnh trên . Chia ra : i ) Nếu return xảy_ra = > lệnh sử_dụng ( nằm sau lệnh return ) không_thể xảy_ra = > không_thể có lỗi ( vẫn giống lúc không có return ) . ii ) ) Nếu return không xảy_ra : trước lệnh sử_dụng vẫn chắc_chắn có lệnh gán ( nếu_không chắc_chắn có lệnh gán thì rơi vào trường_hợp 1 rồi nhé ) = > vẫn không_thể có lỗi . iii ) Return không chắc có xảy_ra không : dù thế_nào cũng là 1 trong 2 cái ( i , ii ) đã nói ở trên . Ok , rất là dài_dòng , nhưng nếu bạn suy_nghĩ được một_cách thông_thường thì không khó hiểu lắm đâu . Giờ đơn_giản nhất_là bạn hãy lấy một ví_dụ để thấy rằng khi có và không có return thì kết_quả ( lỗi hay không lỗi Not_Define ... ) thay_đổi ( theo ý mà bạn đầu topic đã nói ) . Nếu tìm được , tức_là mình sai ( & vice versa ) . Edit : à , mình hiểu rồi , thực_ra bạn nhầm ở chỗ này . Sau break các lệnh nằm ngoài loop ( vẫn trong function ) CÓ thực_thi bạn nhé = > biến local của function vẫn còn . Còn sau return thì thoát khỏi function mất rồi , biến global thì mặc_định được coi là đã define ( theo đặc_tả ) . Cái này chỉ cần anh Hùng nói một câu thì khỏi mất_công suy_diễn , mong anh Hùng giải_đáp , sắp đến deadline rồi ạ . string trong Assign ? 2 lỗi đó cùng định_dạng mà bạn : Type_Mismatch_In_Statement : assign ( test , " ' string test ' " )
